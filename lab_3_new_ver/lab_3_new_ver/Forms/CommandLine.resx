<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>